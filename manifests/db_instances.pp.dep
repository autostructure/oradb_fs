####
# oradb_fs::db_instances
#  author: Matthew Parker
#
# deploys and then runs the db instances rn scripts against a single database
#
# variables:
#  String  $db_name       - datadase sid
#  String  $working_dir   - path to the working directory to deploy transient files to 
#  String  $oracle_home   - full path to the Oracle home
#  String  $db_instances  - flag to indicate if oradb_fs::db_instances is supposed to be run
#
# deploys:
#  ${working_dir}/db_instances1_${db_name}.sql - transient files
#  ${working_dir}/db_instances2_${db_name}.sql - transient files
#
####
define oradb_fs::db_instances (
 String   $db_name       = undef,
 String   $working_dir   = undef,
 String   $oracle_home   = undef,
 String   $db_instances  = undef,
)
{
 if $db_instances == 'false' {
  file { "${working_dir}/db_instances1_${db_name}.sql":
   ensure  => present,
   content => epp('oradb_fs/db_instances1.sql',
               { 'db_name'     => $db_name,
                 'oracle_home' => $oracle_home,
                 'working_dir' => $working_dir}),
   mode    => '0755',
   owner   => 'oracle',
   group   => 'oinstall',
  }
  -> file { "${working_dir}/db_instances2_${db_name}.sql":
   ensure  => present,
   content => epp('oradb_fs/db_instances2.sql.epp',
               { 'domain'   => $facts['networking']['domain'],
                 'hostname' => $facts['networking']['hostname']}),
   mode    => '0755',
   owner   => 'oracle',
   group   => 'oinstall',
  }
  -> exec { "DB instances set up:${oracle_home}:${db_name}":
   command => "${working_dir}/db_instances1_${db_name}.sql",
   user    => 'oracle',
  }
 }
 else {
  notify {"DB Instances RN was not run against: ${oracle_home} : ${db_name}" :}
 }
}


